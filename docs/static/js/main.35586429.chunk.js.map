{"version":3,"sources":["selectors/getNasaImages.js","components/nasa/SearchNasaItem.js","components/nasa/SearchNasa.js","hooks/useFetchNasa.js","selectors/getElementByType.js","components/space/SpaceCard.js","components/space/SpaceList.js","hooks/useFetchByType.js","components/constellations/ConstellationScreen.js","selectors/getElementByName.js","components/search/SearchScreen.js","hooks/useForm.js","hooks/useFetchByName.js","selectors/getElementById.js","components/space/SpaceScreen.js","hooks/useFetchById.js","components/constellations/ZodiacScreen.js","components/ui/Navbar.js","routers/DashboardRoutes.js","routers/AppRouter.js","AstronomApp.js","index.js"],"names":["getNasaImages","search","a","fetch","response","json","photos","result","map","element","id","camera","full_name","img","img_src","rover","name","date","earth_date","status","SearchNasaItem","className","src","alt","style","maxWidth","SearchNasa","history","useState","data","loading","state","setState","useEffect","then","imgs","useFetchNasa","images","onClick","replace","getElementByType","API","cards","cardsFormated","card","_id","bestViewed","brightestStar","cardImage","clusterType","constellationName","largestConstellation","neighboringConstellations","zodiacConstellation","SpaceCard","to","color","SpaceList","element_type","setData","useFetchByType","ConstellationScreen","getElementByName","term","SearchScreen","location","useLocation","queryString","parse","q","initialState","values","setValues","target","value","useForm","searchText","formValues","handleInputChange","useFetchByName","onSubmit","e","preventDefault","push","type","placeholder","autoComplete","onChange","length","getElementById","SpaceScreen","useFetchById","useParams","elementId","lenght","goBack","ZodiacScreen","Navbar","activeClassName","exact","DashboardRoutes","path","component","AppRouter","AstronomApp","ReactDOM","render","document"],"mappings":"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","file":"static/js/main.35586429.chunk.js","sourcesContent":["export const getNasaImages = async search => {\n  // Http request\n\n  const url = `https://api.nasa.gov/mars-photos/api/v1/rovers/curiosity/photos?sol=100&api_key=DEMO_KEY`;\n\n  const response = await fetch(url);\n\n  const { photos } = await response.json();\n\n  const result = photos.map(element => {\n    return {\n      id: element.id,\n      camera: element.camera.full_name,\n      img: element.img_src,\n      rover: element.rover.name,\n      date: element.earth_date,\n      status: element.rover.status\n    };\n  });\n\n  return result;\n};\n","import React from 'react'\n\nexport const SearchNasaItem = ( { id, camera, img, rover, date, status} ) => {\n    // console.log(id, title, url);\n\n    // 10. To create <div></div> tag with image and title of request.\n    // 11. To return this div and GifGrid use it.\n    return (\n        <div className=\"card\">\n        <img className=\"card-img-top\" src={img} alt={camera} style={{ maxWidth: 700}}/>\n        <div className=\"card-body\">\n            <h5 className=\"card-title\">\n                { camera }\n            </h5>\n            <p className=\"card-text\"> { rover } </p>\n            <p className=\"card-text\"> { status } </p>\n            <p className=\"card-text\">\n                <small className=\"text-muted\">{date}</small>\n            </p>\n        </div>\n\n    </div>\n    )\n}\n","import React from 'react';\nimport { useFetchNasa } from '../../hooks/useFetchNasa';\nimport { SearchNasaItem } from './SearchNasaItem';\n\nexport const SearchNasa = ({ history }) => {\n  // 7. To use category prop.\n  // 8. To use a custom hook called useFetchGifs and pass category prop.\n  // 9. To create cards and styling it.\n\n  const { data: images, loading } = useFetchNasa();\n\n  const handleLogin = () => {\n    // history.push(\"/\"); Save the page history\n    history.replace('/'); // Don't save the page history\n  };\n\n  return (\n    <>\n      <section id=\"welcome\" className=\"grid\">\n        <div className=\"welcome-text\">\n          <h2>\n            Web application <br /> and Barichara Stone for all!{' '}\n          </h2>\n          <p className=\"leading\">\n            In this site you will can explore the universe with AstronomUIS,\n            also you will find many interesting topics like <b>Black Holes</b>,{' '}\n            <b>Exoplanets</b>, <b>Barichara Stone and more!</b>{' '}\n          </p>\n          <button className=\"btn btn-primary mt-2\" onClick={handleLogin}>\n            Return!\n          </button>\n        </div>\n      </section>\n\n      {loading && (\n        <p className=\"animate__animated animate__flash\"> Loading... </p>\n      )}\n\n      <div className=\"card-columns animate__animated animate__fadeIn\">\n        {\n          // Use destructuring and only obtain id and title\n          images.map(img => {\n            return <SearchNasaItem key={img.id} {...img} />;\n          })\n        }\n      </div>\n    </>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { getNasaImages } from '../selectors/getNasaImages';\n\nexport const useFetchNasa = () => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true\n  });\n\n  // // Only run a time: useEffect hook.\n  useEffect(() => {\n    getNasaImages().then(imgs => {\n      setState({\n        data: imgs,\n        loading: false\n      });\n    });\n  }, []);\n\n  return state; // {data:[], loading:true}\n};\n","export const getElementByType = async search => {\n  const API = `https://astronomuis.herokuapp.com/api/card/getCards/${search}`;\n  const response = await fetch(API);\n  const { cards } = await response.json();\n\n  const cardsFormated = cards.map(card => {\n    return {\n      id: card._id,\n      bestViewed: card.bestViewed,\n      brightestStar: card.brightestStar,\n      cardImage: card.cardImage,\n      clusterType: card.clusterType,\n      constellationName: card.constellationName,\n      largestConstellation: card.largestConstellation,\n      neighboringConstellations: card.neighboringConstellations,\n      zodiacConstellation: card.zodiacConstellation\n    };\n  });\n  return cardsFormated;\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport const SpaceCard = ({\n  id,\n  brightestStar,\n  cardImage,\n  constellationName,\n  zodiacConstellation\n}) => {\n  return (\n    <div className=\"card\">\n      <img className=\"card-img-top\" src={cardImage} alt={constellationName} />\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">{constellationName}</h5>\n        <p className=\"card-text\"> {brightestStar} </p>\n        <p className=\"card-text\">\n          <small className=\"text-muted\">{zodiacConstellation}</small>\n        </p>\n\n        <Link to={`/space/${id}`} style={{ color: 'pink' }}>\n          More...\n        </Link>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { useFetchByType } from '../../hooks/useFetchByType';\nimport { SpaceCard } from './SpaceCard';\n\nexport const SpaceList = ({ element_type }) => {\n  const { data: cards, loading } = useFetchByType(element_type);\n  return (\n    <>\n      {loading && (\n        <p className=\"animate__animated animate__flash\"> Loading... </p>\n      )}\n      <div className=\"card-columns animate__animated animate__fadeIn\">\n        {cards.map(card => (\n          <SpaceCard key={card.id} {...card} />\n        ))}\n      </div>\n    </>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { getElementByType } from '../selectors/getElementByType';\n\nexport const useFetchByType = element_type => {\n  const [state, setData] = useState({\n    data: [],\n    loading: true\n  });\n\n  useEffect(() => {\n    getElementByType(element_type).then(element => {\n      setData({ data: element, loading: false });\n    });\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return state;\n};\n","import React from 'react';\nimport { SpaceList } from '../space/SpaceList';\n\nexport const ConstellationScreen = () => {\n  return (\n    <div>\n      <h1>Constellation Screen!</h1>\n      <hr />\n      <SpaceList element_type={'Constellation'} />\n    </div>\n  );\n};\n","export const getElementByName = async (term = '') => {\n  if (term === '') {\n    return [];\n  }\n  const API = `https://astronomuis.herokuapp.com/api/card/getCardName/${term}`;\n  const response = await fetch(API);\n  const { card } = await response.json();\n\n  return card;\n};\n","import React from 'react';\nimport queryString from 'query-string';\nimport { useLocation } from 'react-router-dom';\nimport { useForm } from '../../hooks/useForm';\nimport { SpaceCard } from '../space/SpaceCard';\nimport { useFetchByName } from '../../hooks/useFetchByName';\n\nexport const SearchScreen = ({ history }) => {\n  // useLocation property\n  const location = useLocation();\n\n  const { q = '' } = queryString.parse(location.search);\n\n  const [formValues, handleInputChange] = useForm({\n    searchText: q\n  });\n\n  const { searchText } = formValues;\n\n  const constellationsFiltered = useFetchByName(searchText);\n\n  const { data } = constellationsFiltered;\n  const handleSearch = e => {\n    e.preventDefault();\n    history.push(`?q=${searchText}`);\n  };\n\n  return (\n    <div>\n      <h1>Search Screen</h1>\n      <hr />\n      <div className=\"row\">\n        <div className=\"col-5\">\n          <h4>Search Form</h4>\n          <form onSubmit={handleSearch}>\n            <input\n              type=\"text\"\n              placeholder=\"Find your constellation\"\n              className=\"form-control\"\n              name=\"searchText\"\n              autoComplete=\"off\"\n              value={searchText}\n              onChange={handleInputChange}\n            />\n            <button\n              type=\"submit\"\n              className=\"btn m-1 btn-block btn-outline-primary button\"\n            >\n              {' '}\n              Search...{' '}\n            </button>\n          </form>\n        </div>\n        <div className=\"col-7\">\n          <h4>Results</h4>\n          <hr />\n\n          {q === '' && (\n            <div className=\"alert alert-info\">Search constellation!</div>\n          )}\n\n          {q !== '' && data.length === 0 && (\n            <div className=\"alert alert-danger\">\n              There isn't hero with the name '{q}' :-(\n            </div>\n          )}\n\n          {data.map(element => (\n            <SpaceCard key={element._id} {...element} />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { useState } from 'react';\n\n\nexport const useForm = ( initialState = {} ) => {\n    \n    const [values, setValues] = useState(initialState);\n\n    const reset = () => {\n        setValues( initialState );\n    }\n\n\n    const handleInputChange = ({ target }) => {\n\n        setValues({\n            ...values,\n            [ target.name ]: target.value\n        });\n\n    }\n\n    return [ values, handleInputChange, reset ];\n\n}","import { useEffect, useState } from 'react';\nimport { getElementByName } from '../selectors/getElementByName';\n\nexport const useFetchByName = term => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true\n  });\n\n  useEffect(() => {\n    getElementByName(term).then(element => {\n      setState({ data: element, loading: false });\n    });\n  }, [term]);\n\n  return state;\n};\n","export const getElementById = async id => {\n  const API = `https://astronomuis.herokuapp.com/api/card/getCard/${id}`;\n  const response = await fetch(API);\n  const { card } = await response.json();\n  return card;\n};\n","import React from 'react';\nimport { Redirect, useParams } from 'react-router-dom';\nimport { useFetchById } from '../../hooks/useFetchById';\n\nexport const SpaceScreen = ({ history }) => {\n  const { elementId } = useParams();\n\n  const { data: card } = useFetchById(elementId);\n\n  if (!card) {\n    return <Redirect to=\"/\" />;\n  }\n\n  const handleReturn = () => {\n    if (history.lenght <= 2) {\n      history.push('/');\n    } else {\n      history.goBack();\n    }\n  };\n\n  const {\n    bestViewed,\n    brightestStar,\n    cardImage,\n    clusterType,\n    constellationName,\n    largestConstellation,\n    neighboringConstellations,\n    zodiacConstellation\n  } = card;\n\n  return (\n    <div className=\"card mb-3 card animate__animated animate__fadeInLeft\">\n      <img\n        className=\"card-img-top img-thumbnail\"\n        src={cardImage}\n        alt={constellationName}\n      />\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">{constellationName}</h5>\n        <p className=\"card-text\">\n          <b>Neigboring Constellations:</b> {neighboringConstellations}\n        </p>\n        <p className=\"card-text\">\n          <b>Brightest Star:</b> {brightestStar}\n        </p>\n        <p className=\"card-text\">\n          <b>Best viewed in:</b> {bestViewed}\n        </p>\n        <p className=\"card-text\">\n          <b>Zodiac Constellation?:</b> {zodiacConstellation}\n        </p>\n        <p className=\"card-text\">\n          <b>Largest Constellation:</b> {largestConstellation}\n        </p>\n        <p className=\"card-text\">\n          <small className=\"text-muted\">\n            <b>Element type: </b>\n            {clusterType}\n          </small>\n        </p>\n        <button className=\"button\" onClick={handleReturn}>\n          Return\n        </button>\n      </div>\n    </div>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { getElementById } from '../selectors/getElementById';\n\nexport const useFetchById = id => {\n  const [state, setData] = useState({\n    data: [],\n    loading: true\n  });\n\n  useEffect(() => {\n    getElementById(id).then(element => {\n      setData({\n        data: element,\n        loading: false\n      });\n    });\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return state;\n};\n","import React from 'react';\nimport { SpaceList } from '../space/SpaceList';\n\nexport const ZodiacScreen = () => {\n  return (\n    <div>\n      <h1>Zodiac Screen!</h1>\n      <hr />\n\n      <SpaceList element_type={'Zodiac Constellation'} />\n    </div>\n  );\n};\n","import React from 'react'\nimport { Link, NavLink } from 'react-router-dom'\n\nexport const Navbar = () => {\n    return (\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\n            \n            <Link \n                className=\"navbar-brand\" \n                to=\"/\"\n            >\n                AstronomUIS\n            </Link>\n\n            <div className=\"navbar-collapse\">\n                <div className=\"navbar-nav\">\n\n                    <NavLink \n                        activeClassName=\"active\"\n                        className=\"nav-item nav-link\" \n                        exact\n                        to=\"/constellation\"\n                    >\n                        Constellations\n                    </NavLink>\n\n                    <NavLink \n                        activeClassName=\"active\"\n                        className=\"nav-item nav-link\" \n                        exact\n                        to=\"/zodiac\"\n                    >\n                        Zodiac \n                    </NavLink>\n\n\n                </div>\n            </div>\n\n            <div className=\"navbar-collapse collapse w-100 order-3 dual-collapse2\">\n                <ul className=\"navbar-nav ml-auto\">\n                    <NavLink \n                        activeClassName=\"active\"\n                        className=\"nav-item nav-link\" \n                        exact\n                        to=\"/login\"\n                    >\n                        Soon!\n                    </NavLink>\n                </ul>\n            </div>\n\n            <div className=\"navbar-collapse collapse order-3 dual-collapse2\">\n                <ul className=\"navbar-nav ml-auto\">\n                    <NavLink \n                        activeClassName=\"active\"\n                        className=\"nav-item nav-link\" \n                        exact\n                        to=\"/search\"\n                    >\n                        Search\n                    </NavLink>\n                </ul>\n            </div>\n        </nav>\n    )\n}","import React from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { ConstellationScreen } from '../components/constellations/ConstellationScreen';\nimport { SearchScreen } from '../components/search/SearchScreen';\nimport { SpaceScreen } from '../components/space/SpaceScreen';\nimport { ZodiacScreen } from '../components/constellations/ZodiacScreen';\nimport { Navbar } from '../components/ui/Navbar';\n\nexport const DashboardRoutes = () => {\n  return (\n    <>\n      <Navbar />\n\n      <div className=\"container mt-3\">\n        <Switch>\n          <Route exact path=\"/constellation\" component={ConstellationScreen} />\n          <Route exact path=\"/space/:elementId\" component={SpaceScreen} />\n          <Route exact path=\"/zodiac\" component={ZodiacScreen} />\n          <Route exact path=\"/search\" component={SearchScreen} />\n\n          <Redirect to=\"/constellation\" />\n        </Switch>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { SearchNasa } from '../components/nasa/SearchNasa';\nimport { DashboardRoutes } from './DashboardRoutes';\n\nexport const AppRouter = () => {\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <Route exact path=\"/login\" component={SearchNasa} />\n          <Route path=\"/\" component={DashboardRoutes} />\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n","import React from 'react'\nimport { AppRouter } from './routers/AppRouter';\n\nexport const AstronomApp = () => {\n    return (\n        <AppRouter />\n    );\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { AstronomApp } from './AstronomApp';\nimport './index.css';\n\n\nReactDOM.render(\n  <AstronomApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}